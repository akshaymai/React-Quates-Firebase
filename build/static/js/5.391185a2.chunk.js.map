{"version":3,"sources":["components/quotes/NoQuotesFound.js","components/quotes/NoQuotesFound.module.css","components/quotes/QuoteItem.module.css","components/quotes/QuoteList.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/pages/allqueotes.js"],"names":["NoQuotesFound","className","classes","noquotes","to","module","exports","QuoteItem","props","item","text","author","id","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuests","sort","quoteA","quoteB","sorting","onClick","push","pathname","list","map","quote","AllQuotes","useHttp","getAllQuotes","sendRequest","status","allquoestsDAta","data","error","useEffect","LoadingSpinner","length"],"mappings":"mIAAA,mCAiBeA,IAdO,WACpB,OACE,sBAAKC,UAAWC,IAAQC,SAAxB,UACE,iDACA,cAAC,IAAD,CAAMC,GAAG,cAAcH,UAAU,MAAjC,8B,mBCNNI,EAAOC,QAAU,CAAC,SAAW,kC,mBCA7BD,EAAOC,QAAU,CAAC,KAAO,0B,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,6B,wFCkB5CC,EAhBG,SAACC,GACjB,OACE,qBAAIP,UAAWC,IAAQO,KAAvB,UACE,mCACE,qCACE,4BAAID,EAAME,SAEZ,qCAAaF,EAAMG,YAErB,cAAC,IAAD,CAAMP,GAAE,kBAAaI,EAAMI,IAAMX,UAAU,MAA3C,iC,iBC2CSY,EAjDG,SAACL,GACjB,IAAoBM,EAAQC,EAUtBC,EAAQC,cACRC,EAASC,cAGTC,EAA+C,QAFnC,IAAIC,gBAAgBH,EAASI,QAEVC,IAAI,QACnCC,GAfcV,EAeUN,EAAMM,OAfRC,EAeeK,EAdlCN,EAAOW,MAAK,SAACC,EAAQC,GAC1B,OAAIZ,EACKW,EAAOd,GAAKe,EAAOf,GAAK,GAAK,EAE7Bc,EAAOd,GAAKe,EAAOf,GAAK,GAAK,MAsB1C,OACE,eAAC,WAAD,WACE,qBAAKX,UAAWC,IAAQ0B,QAAxB,SACA,yBAAQC,QAbe,WAEzBb,EAAQc,KAAK,CACXC,SAASb,EAASa,SAClBT,OAAO,QAAD,OAAUF,EAAqB,OAAO,UAS5C,kBACQA,EAAmB,aAAa,iBAGxC,oBAAInB,UAAWC,IAAQ8B,KAAvB,SACGR,EAAaS,KAAI,SAACC,GAAD,OAChB,cAAC,EAAD,CAEEtB,GAAIsB,EAAMtB,GACVD,OAAQuB,EAAMvB,OACdD,KAAMwB,EAAMxB,MAHPwB,EAAMtB,a,gCCPRuB,UA9BG,WAChB,MAKIC,YAAQC,KAAc,GAJxBC,EADF,EACEA,YACAC,EAFF,EAEEA,OACMC,EAHR,EAGEC,KACAC,EAJF,EAIEA,MAMF,OAJAC,qBAAU,WACRL,MACC,CAACA,IAEW,YAAXC,EAEA,qBAAKtC,UAAU,WAAf,SACE,cAAC2C,EAAA,EAAD,MAMHF,EACQ,mBAAGzC,UAAU,mBAAb,SAAiCyC,IAGhC,cAATH,GAAyBC,GAA4C,IAA1BA,EAAeK,OAGtD,cAAC,EAAD,CAAW/B,OAAQ0B,IAFf,cAACxC,EAAA,EAAD","file":"static/js/5.391185a2.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\nimport classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link to=\"/add/queots\" className=\"btn\">\n      Add a Quote\n      </Link>\n      {/* <a className='btn'>\n \n      </a> */}\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__3DIYb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2dOvb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3pzcl\",\"sorting\":\"QuoteList_sorting__rL6H1\"};","import { Link } from \"react-router-dom\";\nimport classes from \"./QuoteItem.module.css\";\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link to={`/queots/${props.id}`} className=\"btn\">\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst QuoteList = (props) => {\n  const sortQuotes = (quotes, ascending) => {\n    return quotes.sort((quoteA, quoteB) => {\n      if (ascending) {\n        return quoteA.id > quoteB.id ? 1 : -1;\n      } else {\n        return quoteA.id < quoteB.id ? 1 : -1;\n      }\n    });\n  };\n\n  const history=useHistory() \n  const location=useLocation() \n  const queryParams=new URLSearchParams(location.search)\n \n  const isSortingAscending=queryParams.get('sort') === 'asc'\n  const sortedQuests=sortQuotes(props.quotes,isSortingAscending)\n\n  const changeSortingHandler=()=>{\n    // history.push('/allquests?sort='+(isSortingAscending ? 'desc':'asc'))\n    history.push({\n      pathname:location.pathname,\n      search:`sort=${(isSortingAscending ? 'desc':'asc')}`\n    })\n        // history.push(`${location.pathname}?sort=${(isSortingAscending ? 'desc':'asc')}`)\n\n      \n  } \n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n      <button onClick={changeSortingHandler}>\n        Sort {isSortingAscending?'Descending':'Ascending'}\n      </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuests.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import React, { useEffect } from \"react\";\nimport QuoteList from \"../quotes/QuoteList\";\nimport { getAllQuotes } from \"../lib/api\";\nimport useHttp from \"../Hooks/use-http\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport NoQuotesFound from \"../quotes/NoQuotesFound\";\n \nconst AllQuotes = () => {\n  const {\n    sendRequest,\n    status,\n    data: allquoestsDAta,\n    error,\n  } = useHttp(getAllQuotes, true);\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n\n  if(error){\n      return <p className=\"centered focused\">{error}</p>\n  }\n \n  if(status==='completed' &&(!allquoestsDAta || allquoestsDAta.length === 0)){\n      return <NoQuotesFound/>\n  }\n  return <QuoteList quotes={allquoestsDAta} />;\n};\n\nexport default AllQuotes; \n"],"sourceRoot":""}